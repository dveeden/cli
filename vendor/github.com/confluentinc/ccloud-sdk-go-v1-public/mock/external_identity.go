// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: interfaces.go

package mock

import (
	context "context"
	sync "sync"
)

// ExternalIdentity is a mock of ExternalIdentity interface
type ExternalIdentity struct {
	lockCreateExternalIdentity sync.Mutex
	CreateExternalIdentityFunc func(ctx context.Context, cloud, accountID string) (string, error)

	calls struct {
		CreateExternalIdentity []struct {
			Ctx       context.Context
			Cloud     string
			AccountID string
		}
	}
}

// CreateExternalIdentity mocks base method by wrapping the associated func.
func (m *ExternalIdentity) CreateExternalIdentity(ctx context.Context, cloud, accountID string) (string, error) {
	m.lockCreateExternalIdentity.Lock()
	defer m.lockCreateExternalIdentity.Unlock()

	if m.CreateExternalIdentityFunc == nil {
		panic("mocker: ExternalIdentity.CreateExternalIdentityFunc is nil but ExternalIdentity.CreateExternalIdentity was called.")
	}

	call := struct {
		Ctx       context.Context
		Cloud     string
		AccountID string
	}{
		Ctx:       ctx,
		Cloud:     cloud,
		AccountID: accountID,
	}

	m.calls.CreateExternalIdentity = append(m.calls.CreateExternalIdentity, call)

	return m.CreateExternalIdentityFunc(ctx, cloud, accountID)
}

// CreateExternalIdentityCalled returns true if CreateExternalIdentity was called at least once.
func (m *ExternalIdentity) CreateExternalIdentityCalled() bool {
	m.lockCreateExternalIdentity.Lock()
	defer m.lockCreateExternalIdentity.Unlock()

	return len(m.calls.CreateExternalIdentity) > 0
}

// CreateExternalIdentityCalls returns the calls made to CreateExternalIdentity.
func (m *ExternalIdentity) CreateExternalIdentityCalls() []struct {
	Ctx       context.Context
	Cloud     string
	AccountID string
} {
	m.lockCreateExternalIdentity.Lock()
	defer m.lockCreateExternalIdentity.Unlock()

	return m.calls.CreateExternalIdentity
}

// Reset resets the calls made to the mocked methods.
func (m *ExternalIdentity) Reset() {
	m.lockCreateExternalIdentity.Lock()
	m.calls.CreateExternalIdentity = nil
	m.lockCreateExternalIdentity.Unlock()
}
